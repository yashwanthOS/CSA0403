#include <stdio.h>

#define MAX 25

int main() {
    int blockSize[MAX], processSize[MAX];
    int blockCount, processCount;
    int allocation[MAX];

    // Input number of blocks and their sizes
    printf("Enter the number of memory blocks: ");
    scanf("%d", &blockCount);

    printf("Enter the size of each memory block:\n");
    for (int i = 0; i < blockCount; i++) {
        printf("Block %d: ", i + 1);
        scanf("%d", &blockSize[i]);
    }

    // Input number of processes and their sizes
    printf("\nEnter the number of processes: ");
    scanf("%d", &processCount);

    printf("Enter the size of each process:\n");
    for (int i = 0; i < processCount; i++) {
        printf("Process %d: ", i + 1);
        scanf("%d", &processSize[i]);
        allocation[i] = -1; // Initialize allocation as -1 (not allocated)
    }

    // First Fit Allocation
    for (int i = 0; i < processCount; i++) {
        for (int j = 0; j < blockCount; j++) {
            if (blockSize[j] >= processSize[i]) {
                // Allocate block j to process i
                allocation[i] = j;
                blockSize[j] -= processSize[i];
                break; // Break once allocated
            }
        }
    }

    // Output allocation results
    printf("\nProcess No.\tProcess Size\tBlock No.\n");
    for (int i = 0; i < processCount; i++) {
        printf("%d\t\t%d\t\t", i + 1, processSize[i]);
        if (allocation[i] != -1)
            printf("%d\n", allocation[i] + 1); // Add 1 for block number display
        else
            printf("Not Allocated\n");
    }

    return 0;
}
