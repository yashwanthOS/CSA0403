#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#define MAX 100

struct Directory {
    char file_name[20];
} dir[MAX];

int count = 0;

// Function to create a file
void create_file() {
    char name[20];
    printf("Enter file name to create: ");
    scanf("%s", name);

    // Check if file already exists
    for (int i = 0; i < count; i++) {
        if (strcmp(name, dir[i].file_name) == 0) {
            printf("File already exists!\n");
            return;
        }
    }

    strcpy(dir[count].file_name, name);
    count++;
    printf("File created successfully.\n");
}

// Function to delete a file
void delete_file() {
    char name[20];
    int found = 0;
    printf("Enter file name to delete: ");
    scanf("%s", name);

    for (int i = 0; i < count; i++) {
        if (strcmp(name, dir[i].file_name) == 0) {
            found = 1;
            for (int j = i; j < count - 1; j++) {
                strcpy(dir[j].file_name, dir[j + 1].file_name);
            }
            count--;
            printf("File deleted successfully.\n");
            break;
        }
    }

    if (!found)
        printf("File not found.\n");
}

// Function to search for a file
void search_file() {
    char name[20];
    printf("Enter file name to search: ");
    scanf("%s", name);

    for (int i = 0; i < count; i++) {
        if (strcmp(name, dir[i].file_name) == 0) {
            printf("File '%s' found at position %d.\n", name, i + 1);
            return;
        }
    }

    printf("File not found.\n");
}

// Function to display all files
void display_files() {
    if (count == 0) {
        printf("Directory is empty.\n");
        return;
    }

    printf("Files in directory:\n");
    for (int i = 0; i < count; i++) {
        printf("%d. %s\n", i + 1, dir[i].file_name);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\n--- Single Level Directory ---\n");
        printf("1. Create File\n2. Delete File\n3. Search File\n4. Display Files\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1: create_file(); break;
            case 2: delete_file(); break;
            case 3: search_file(); break;
            case 4: display_files(); break;
            case 5: exit(0);
            default: printf("Invalid choice! Try again.\n");
        }
    }

    return 0;
}
